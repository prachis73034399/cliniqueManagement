package com.bridgelabz.jsonread;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.bridgelabz.model.Clinique;
import com.bridgelabz.model.Doctor;
import com.bridgelabz.model.Patient;


public class DataJsonReader
{
	public ArrayList<Doctor> jsonDoctorRead() throws ParseException
	{
		ArrayList<Doctor> docArray = new ArrayList<Doctor>();
		ArrayList<Clinique> clinicArray = new ArrayList<Clinique>();
		ArrayList<Patient> payArray = new ArrayList<Patient>();
		Doctor doctor = new Doctor();
		Clinique clinique= new Clinique();
		Patient patient= new Patient();
			//creating JSonParser Object it is use to convert a JSON text to a JavaScript object.
			JSONParser parser = new JSONParser();
			File file = new File("data.json");
			try
			{    
				
				Object object = parser.parse(new FileReader(file));
				JSONObject doctObj = (JSONObject) object;//json object created
				JSONArray doctorsArray = (JSONArray) doctObj.get("Doctors");
				JSONArray cliniqueArray = (JSONArray) doctObj.get("Cliniques");
				JSONArray patientsArray = (JSONArray) doctObj.get("Patients");
				JSONArray a;
				//Parse method will read data from the file and return the object
				//JSONArray array = (JSONArray)parser.parse(new FileReader("doctor.json"));
	                        
				//calling iterator method on jsonArray object
				Iterator<JSONObject> iterator = doctorsArray.iterator();

				//displaying the details of the inventory
						
				for(int i=0; i< cliniqueArray.size(); i++)
				{
					JSONObject cliniques = (JSONObject)iterator.next();	

					Object obj = cliniques.get("Name");
					String cliniqueName = (String)obj;
					clinique.setCliniqueName(cliniqueName);
				
					obj = cliniques.get("ID");
					int cliniqueId = Integer.parseInt(String.valueOf(obj));
					clinique.setCliniqueId(cliniqueId);
					
					clinicArray.add(clinique);
					for (int j=0; j< clinicArray.size(); j++)
					{
						System.out.println("CLINIC :"+clinicArray.get(j).getCliniqueName());
					}
				}

				for(int i=0; i< doctorsArray.size(); i++)
				{
					JSONObject doctors = (JSONObject)iterator.next();	

					Object obj = doctors.get("Name");
					String name = (String)obj;
					doctor.setDoctorName(name);
				
					obj = doctors.get("ID");
					int idInfo = Integer.parseInt(String.valueOf(obj));
					doctor.setDoctorId(idInfo);
					
					obj = doctors.get("Specialization");
					String specialization = (String)obj;
					doctor.setSpecialization(specialization);
					
					obj = doctors.get("Availability");
					String availability = (String)obj;
					doctor.setAvailability(availability);
					
					
					a =  (JSONArray) doctors.get("ClinicId");
					System.out.println("eeeeeeeeeee"+a);
					doctor.setCliniqueId(a);
					
					docArray.add(doctor);
					
					for (Object object3 : docArray)
					{
						System.out.println("DOCTOR :"+object3);
					}
				}
				
				for(int i=0; i< patientsArray.size(); i++)
				{
					JSONObject patients = (JSONObject)iterator.next();	

					Object obj = patients.get("MobileNo");
					String mblNumber = (String)obj;
					patient.setMobileNumber(mblNumber);
				
					obj = patients.get("DoctID");
					int doctId = Integer.parseInt(String.valueOf(obj));
					patient.setDoctorsId(doctId);
					
					obj = patients.get("ID");
					int id = Integer.parseInt(String.valueOf(obj));
					patient.setPatientId(id);
					
					obj = patients.get("Age");
					int age = Integer.parseInt(String.valueOf(obj));
					patient.setPatientId(age);
					
					obj = patients.get("Name");
					String name = (String)obj;
					patient.setPatientName(name);
					

					payArray.add(patient);
					
					for (Object object4 : payArray)
					{
						System.out.println("PATIENT :"+object4);
					}
					
				}
			
			} 
			catch(FileNotFoundException e1)
			{
				e1.printStackTrace();
			} 
			catch(IOException e)
			{
				e.printStackTrace();
			}
			return null;
		}
	
}
