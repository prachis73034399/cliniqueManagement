package com.bridgelabz.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.bridgelabz.model.Clinique;
import com.bridgelabz.model.Doctor;
import com.bridgelabz.model.Patient;
public class QueryInjection  implements JdbcDao
{
	Doctor doctor;
	Clinique clinique;
	Patient patient;
	int patient1;

	DatabaseConnection databaseConnection = new DatabaseConnection();
	Statement stmt= databaseConnection.connection();
	
	public void dropTable() throws SQLException
	{
		try
		{
			String sql1= "DROP TABLE Clinique";
			stmt.executeUpdate(sql1);
		}
		catch(Exception e)
		{
			
		}
		
		try
		{
			String sql2= "DROP TABLE Doctor";
			stmt.executeUpdate(sql2);
		}
		catch(Exception e)
		{
			
		}
		
		try
		{
			String sql3= "DROP TABLE Patient";
			stmt.executeUpdate(sql3);
		}
		catch(Exception e)
		{
			
		}
		try{
			String sql4= "DROP TABLE Dr_clinique";
			stmt.executeUpdate(sql4);
		}catch(Exception e){
			
		}
		
		try{
			String sql4= "DROP TABLE Patient_clinique";
			stmt.executeUpdate(sql4);
		}catch(Exception e){
			
		}
	}
	
	 //<<<<<<<<<----------------For Clinique Table------------------>>>>>>>>>>>>>>>>>>>
    public void insertCliniqueDetails( Clinique clinique) throws SQLException
    {
    	try
        {
	        String sql = "CREATE TABLE Clinique " +
	                   "(clinique_id INTEGER not NULL, " +
	                   " clinique_Name VARCHAR(255), " + 
	                   " PRIMARY KEY ( clinique_id ))"; 
	        
	        stmt.executeUpdate(sql);
	           
	        System.out.println("Inserted records into the  Clinique table...");
        }
        catch(SQLException e)
        {
        	System.out.println(e);
        }
	        
    	String sql1  = "INSERT INTO Clinique(clinique_id,clinique_Name) VALUES("
					+ clinique.getCliniqueId() + ",'"  + clinique.getCliniqueName() + "')";
           		
    	System.out.println("SSQL"+sql1);
       	 stmt.executeUpdate(sql1);
    }


        //<<<<<<<<<----------------For Doctor Table------------------>>>>>>>>>>>>>>>>>>>
    public void insertDoctorDetails(Doctor doctor) throws SQLException 
    {
    	
        try
        {
	        String sql = "CREATE TABLE Doctor " +
	                   "(doct_Id INTEGER not NULL, " +
	                   " doctname VARCHAR(255), " + 
	                   " availability VARCHAR(255), " + 
	                  /* " clinique_Id VARCHAR(255), " + */
	                   " Specialization VARCHAR(255), " + 
	                   " PRIMARY KEY (doct_Id  ))"; 
	        
	        stmt.executeUpdate(sql);
	           
	        System.out.println("Inserted records into the  Doctor table...");
        }
        catch(SQLException e)
        {
        	System.out.println("alredy exist");
        }
        
        
        String sql1 = "INSERT INTO Doctor(doct_Id,doctname,availability,Specialization) VALUES("
					+ doctor.getDoctorId() + ",'" +doctor.getDoctorName() + "','"
					+ doctor.getAvailability() + "','" + doctor.getSpecialization() + "')";
	   	 	
	   	 stmt.executeUpdate(sql1);
    }
    
	        //<<<<<<<<<----------------For Patient Table------------------>>>>>>>>>>>>>>>>>>>
	        
        public void insertPatientsDetails(Patient patient) throws SQLException
        {
	        try
	        {
		        String sql = "CREATE TABLE Patient " +
		                   "(patient_Id INTEGER not NULL, " +
		                  /* "(clinique_id INTEGER , " +*/
		                   " patient_Name VARCHAR(255), " + 
		                  
		                   " PRIMARY KEY ( patient_Id ))"; 
		        
		        stmt.executeUpdate(sql);
		           
		        System.out.println("Inserted records into the Patient  table...");
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	        
	      
       	 	
	        String sql1 = "INSERT INTO Patient(patient_Id,patient_Name) VALUES("
					+ patient.getPatientId() + ",'" + patient.getPatientName()+ "')";
					
       
           		System.out.println("SSQL"+sql1);
           		stmt.executeUpdate(sql1);
        }
        
        
        public void insertIntoCliniqDoctorTable(Doctor doctor) throws SQLException
        {
        	//System.out.println("JJJJJJJJJ"+doctor.getCliniqueId());
	        try
	        {
		        String sql = "CREATE TABLE Dr_clinique " +
		                   "(doct_Id INTEGER not NULL, " +
		                   " availability VARCHAR(255), " + 
		                   "clinique_id INTEGER )"; 
		        
		 
		        
		        stmt.executeUpdate(sql);
		           
		        System.out.println("Inserted records into the DrClinic  table...");
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	        
	      //  System.out.println("444444444"+doctor.getCliniqueId().size());
	   	 	
	   	 	
	   	for(int i=0; i<doctor.getListOfAvailability().size(); i++ )
	   	{
	   	 String sql1 = "INSERT INTO Dr_clinique(doct_Id,clinique_id,availability) VALUES("
					+ doctor.getDoctorId() + ",'" + doctor.getListOfCliniqueId().get(i)+"','"+doctor.getListOfAvailability().get(i)+ "')";
					
	
	       		
	       		System.out.println("SSQL"+sql1);
	       		stmt.executeUpdate(sql1);
	    }
        }
	       
        
        public void insertIntoCliniqPatientTable(Patient patient) throws SQLException
        {
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
		        String sql = "CREATE TABLE Patient_clinique " +
		                   "(patient_Id INTEGER not NULL, " +
		                   "clinique_id INTEGER )"; 
		        
		 
		        
		        stmt.executeUpdate(sql);
		           
		        System.out.println("Inserted records into the DrClinic  table...");
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	        
	       // System.out.println("5555555""+patient.getCliniqueId().size());
	   	 	
	   	 	
	   	for(int i=0; i<patient.getCliniqueId().size(); i++ )
	   	{
	   	 String sql1 = "INSERT INTO Patient_clinique(patient_Id,clinique_id) VALUES("
					+ patient.getPatientId() + ",'" + patient.getCliniqueId().get(i)+ "')";
					
	   	 System.out.println("SSQL"+sql1);
	       		stmt.executeUpdate(sql1);
	    }
        }

        
        public void selectQuery() throws SQLException
        {
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        	 String sql = "SELECT * FROM Doctor";
	             ResultSet rs = stmt.executeQuery(sql);
	             //STEP 5: Extract data from result set
	             while(rs.next()){
	                //Retrieve by column name
	                int id  = rs.getInt("id");
	                String doctName = rs.getString("doctname");
	                String availability = rs.getString("availability");
	                String specialization = rs.getString("Specialization");

	                //Display values
	                System.out.print("ID: " + id);
	                System.out.print("DOCNAME: " + doctName);
	                System.out.print(" Availabity: " + availability);
	                System.out.println("Specialization : " + specialization);
	             }
	             rs.close();
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	     }
	        	 
	        	 
        public void selectPatient(Patient patient) throws SQLException
        {
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        	
	        	 String sql = "SELECT * FROM Patient WHERE patient_Name ='sonu'";
	        	String sql2=" SELECT * FROM country.Patient p NATURAL JOIN Patient_clinique pc WHERE p.patient_Name= 'sonu'";
	             ResultSet rs = stmt.executeQuery(sql);
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set
	             while(rs.next()){
	                //Retrieve by column name
	                int id  = rs.getInt("id");
	                String doctName = rs.getString("patient_Name");


	                //Display values
	                System.out.print("ID: " + id);
	                System.out.print("PATIENT NAME: " + doctName);
	                
	             }
	            
	            
	             while(rs1.next()){
	            	 System.out.print("@@@@@@@@@@@@@@@@ ");
		                //Retrieve by column name
		                int id  = rs1.getInt("patient_Id");
		                String doctName = rs1.getString("patient_Name");
		                int clinicId= rs1.getInt("clinique_id"); 

		                //Display values
		                System.out.print("@@@@ID: " + id);
		                System.out.print("@@@@@@PATIENT NAME: " + doctName);
		                System.out.print("@@@@@@CLINI ID: " + clinicId);
		                
		             }
		             rs.close();
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	           
        }
        
       

        public void searchCliniquesForPatient(Patient patient) throws SQLException
        {
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        	
	        	 
	        	String sql2=" SELECT * FROM country.Patient p NATURAL JOIN Patient_clinique pc WHERE p.patient_Name= 'sonu'";
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	            
	             while(rs1.next()){
	            	 
		                //Retrieve by column name
		                int id  = rs1.getInt("patient_Id");
		                String doctName = rs1.getString("patient_Name");
		                int clinicId= rs1.getInt("clinique_id"); 

		                //Display values
		                System.out.println("ID: " + id);
		                System.out.println("PATIENT NAME: " + doctName);
		                System.out.println("CLINI ID: " + clinicId);
		                
		             }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	           
        }
	        
        public List<Integer> searchCliniqueForPatient(int patientId) throws SQLException
        { 
        	
        	List<Integer> listOfCliniqueId = new ArrayList<Integer>(); 
        
        	
        	
        	
	        try
	        {
	        	
	        	 
	        	String sql2="SELECT * FROM Patient_clinique pc NATURAL JOIN Clinique   WHERE pc.patient_Id="+patientId;
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	            
	             while(rs1.next()){
	            	 
		                //Retrieve by column name
	            	// patient1  = rs1.getInt("patient_Id");
		               
		                 int clinicId= rs1.getInt("clinique_id");
		                 String clinicName= rs1.getString("clinique_Name");
		                 listOfCliniqueId.add(clinicId);

		              
		                System.out.println("CLINI ID: " + clinicId);
		                
		             }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return listOfCliniqueId;    
        }
        
        public List<Clinique> cliniqueInfo(int clinicId) throws SQLException
        { 
        	Clinique clinic = new Clinique();
        	List<Clinique> listOfCliniques = new ArrayList<Clinique>(); 
        
        	
        	
        	
	        try
	        {
	        	
	        	 
	        	String sql2="SELECT * FROM Clinique  WHERE clinique_id="+clinicId;
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	            
	             while(rs1.next()){
	            	 
		                //Retrieve by column name
	            	// patient1  = rs1.getInt("patient_Id");
		               
		                 int clinicId1= rs1.getInt("clinique_id"); 
		                 String  clinicName= rs1.getString("clinique_Name");
		                 
		                 clinic.setCliniqueId(clinicId1);
		                 clinic.setCliniqueName(clinicName);
		                 listOfCliniques.add(clinic);

		                //Display values
		               // System.out.println("PATIENT ID: " + patient1);
		              
		                System.out.println("CLINI ID: " + clinicId1);
		                
		             }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return listOfCliniques;    
        }
        
        public List<Doctor> selectDoctorOfCliniqueForPatient(int cliniqueId) throws SQLException
        { 
        	
        	List<Doctor> listOfDoctors = new ArrayList<Doctor>(); 
        	
        	
        	
        	
	        try
	        {
	        	
	        	 
	        	String sql2="  SELECT * FROM Dr_clinique dc NATURAL JOIN Doctor WHERE dc.clinique_id="+cliniqueId;
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	            
	             while(rs1.next()){
	            	 
	            	 Doctor doctor = new Doctor();
		               
	            	 	int doctorId= rs1.getInt("doct_Id"); 
		                 String doctorName = rs1.getString("doctName");
		                 String availabitity = rs1.getString("availability");
		                 String specialization = rs1.getString("specialization");
		                
		                 doctor.setDoctorId(doctorId);
		                 doctor.setDoctorName(doctorName);
		                 doctor.setAvailability(availabitity);
		                 doctor.setSpecialization(specialization);
		                 
		                 listOfDoctors.add(doctor);

		                //Display values
		               // System.out.println("PATIENT ID: " + patient1);
		              
		               
		                
		             }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return listOfDoctors;    
        }
        
        
        public String searchNameOfPatientUsingId(int patientId) throws SQLException
        {
        	Patient patient = new Patient();
        	String a = null ;
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        
	        	 
	        	String sql2="SELECT patient_Name FROM Patient WHERE patient_Id="+patientId;
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	            
	             while(rs1.next()){
	            	 
		                //Retrieve by column name
	            	 	a=  rs1.getString("patient_Name");
	            	  patient.setPatientName(rs1.getString("patient_Name"));
		                
		                

		               // System.out.println("PATIENT Name: " + a);
		                
		                
		             }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return a;    
        }

       
        public List<Doctor> availableDoctorsInTime(String availability, int cliniqueId) throws SQLException
        {
        	List<Doctor> listOfAvailableDoctors = new ArrayList<Doctor>();
        	String a = null ;
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        
	        	 
	        	String sql2="SELECT * FROM country.Dr_clinique WHERE clinique_id="+cliniqueId+" AND availability='"+availability;
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	             while(rs1.next())
	             {
	            	 Doctor doctor= new Doctor();
		              
	            	 	int doctID =  rs1.getInt("doct_Id");
	            	 	int cliniqueId1= rs1.getInt("clinique_Id");
		                
		                 doctor.setDoctorId(doctID);
		                // doctor.setListOfCliniqueId(cliniqueId1);
		                 
		                 listOfAvailableDoctors.add(doctor);
		                
		                
		            }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return listOfAvailableDoctors;    
        }
        
        public List<Doctor> checkAvailableDoctors(String availability) throws SQLException
        {
        	List<Doctor> listOfAvailableDoctors = new ArrayList<Doctor>();
        	String a = null ;
        	//System.out.println("JJJJJJJJJ"+patient.getCliniqueId());
	        try
	        {
	        
	        	 
	        	String sql2="SELECT * FROM Doctor WHERE availability='"+availability+"'";
	           
	             ResultSet rs1 = stmt.executeQuery(sql2);
	             //STEP 5: Extract data from result set

	            
	             while(rs1.next())
	             {
	            	 Doctor doctor= new Doctor();
		              
	            	 	int doctID =  rs1.getInt("doct_Id");
	            	 	 String doctorName = rs1.getString("doctName");
		                 String availabitity = rs1.getString("availability");
		                 String specialization = rs1.getString("specialization");
		                
		                 doctor.setDoctorId(doctID);
		                 doctor.setDoctorName(doctorName);
		                 doctor.setAvailability(availabitity);
		                 doctor.setSpecialization(specialization);
		               
		                 listOfAvailableDoctors.add(doctor);
		                
		                
		            }
		           
		             rs1.close();
	             
	             
	        }
	        catch(Exception e)
	        {
	        	System.out.println("alredy exist");
	        }
	       return listOfAvailableDoctors;    
        }

}
